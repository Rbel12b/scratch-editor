{
  "huskylens.name": "HuskyLens",
  "huskylens.initI2c": "initialize HuskyLens",
  "huskylens.selectAlgorithm": "set algorithm to [algorithm]",
  "huskylens.requestDataOnce": "get data from HuskyLens",
  "huskylens.getLearnedIDCount": "number of IDs learned",
  "huskylens.isObjectOnScreen": "is there a(n) [objectType] on screen?",
  "huskylens.getBoxNearCenter": "[parameter] of box closest to center",
  "huskylens.getArrowNearCenter": "[parameter] of arrow closest to center",
  "huskylens.isIDLearned": "is ID [id] learned?",
  "huskylens.isIDObjectOnScreen": "is ID [id] [objectType] on screen?",
  "huskylens.getBoxParamByID": "[parameter] of box with ID [id]",
  "huskylens.getArrowParamByID": "[parameter] of arrow with ID [id]",
  "huskylens.getTotalCount": "number of [objectType]",
  "huskylens.getNthBoxParam": "[parameter] of box number [index]",
  "huskylens.getNthArrowParam": "[parameter] of arrow number [index]",
  "huskylens.getTotalByID": "number of [objectType] with ID [id]",
  "huskylens.getNthBoxParamByID": "[parameter] of box [index] with ID [id]",
  "huskylens.getNthArrowParamByID": "[parameter] of arrow [index] with ID [id]",
  "huskylens.learnIDAuto": "automatically learn ID [id]",
  "huskylens.forgetAll": "forget all learning data",
  "huskylens.setIDName": "set name of ID [id] to [name]",
  "huskylens.showTextOnScreen": "show text [text] at x [x], y [y]",
  "huskylens.clearText": "clear all text from screen",
  "huskylens.takePhoto": "take a [type] and save it",
  "huskylens.saveModelToSD": "save current model as number [data]",
  "huskylens.menu.algorithm.face_rec": "face recognition",
  "huskylens.menu.algorithm.obj_trac": "object tracking",
  "huskylens.menu.algorithm.obj_rec": "object recognition",
  "huskylens.menu.algorithm.line_trac": "line tracking",
  "huskylens.menu.algorithm.color_rec": "color recognition",
  "huskylens.menu.algorithm.tag_rec": "tag recognition",
  "huskylens.menu.algorithm.obj_class": "object classification",
  "huskylens.menu.algorithm.qr_rec": "QR code recogmition (EDU only)",
  "huskylens.menu.algorithm.bar_rec": "barcode recognition (EDU only)",
  "huskylens.menu.resultTypeMenu.frame": "box",
  "huskylens.menu.resultTypeMenu.arrow": "arrow",
  "huskylens.menu.resultTypeMenu2.frame": "boxes",
  "huskylens.menu.resultTypeMenu2.arrow": "arrows",
  "huskylens.menu.parameterMenu1.xCenter": "X center",
  "huskylens.menu.parameterMenu1.yCenter": "Y center",
  "huskylens.menu.parameterMenu1.width": "width",
  "huskylens.menu.parameterMenu1.height": "height",
  "huskylens.menu.parameterMenu2.xOrigin": "X beginning",
  "huskylens.menu.parameterMenu2.yOrigin": "Y beginning",
  "huskylens.menu.parameterMenu2.xTarget": "X endpoint",
  "huskylens.menu.parameterMenu2.yTarget": "Y endpoint",
  "huskylens.menu.parameterMenu3.id": "ID",
  "huskylens.menu.photoTypeMenu.photo": "photo",
  "huskylens.menu.photoTypeMenu.screen": "screenshot"
}